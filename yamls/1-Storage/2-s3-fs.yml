apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: buildspace-storage
  labels:
    app: minio
spec:
  replicas: 1
  template:
    metadata:
      name: minio
      labels:
        app: minio
    spec:
      containers:
        - name: minio
          image: quay.io/minio/minio:latest
          imagePullPolicy: IfNotPresent
          env:
          - name: MINIO_ROOT_USER
            valueFrom:
              secretKeyRef:
                name: secret-minio
                key: username
          - name: MINIO_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: secret-minio
                key: password

          #  - name: MINIO_ACCESS_KEY
          #    value: "minio"
          #  - name: MINIO_SECRET_KEY
          #    value: "minio123"

          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: 9000
            initialDelaySeconds: 120
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /minio/health/ready
              port: 9000
            initialDelaySeconds: 120
            periodSeconds: 20
          resources:
            requests:
              memory: "1000Mi"
              cpu: "1000m"
            limits:
              memory: "1500Mi"
              cpu: "1500m"

          # volumeMounts:
          #   - mountPath: /data
          #     name: data
          volumeMounts:
            - mountPath: /var/lib/data
              name: minio-data
          command:
            - /bin/bash
            - -c
          args:
              - minio server /var/lib/data --console-address :9090
      volumes:
        - name: minio-data
        # - name: data
          persistentVolumeClaim:
              claimName: minio-data-claim
          # emptyDir:
          #   sizeLimit: 500Mi
      restartPolicy: Always
  selector:
    matchLabels:
      app: minio
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: minio-data
  namespace: buildspace-storage
spec:
  storageClassName: slow
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/var/lib/data"
  persistentVolumeReclaimPolicy: Retain
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-data-claim
  namespace: buildspace-storage
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  storageClassName: slow
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: buildspace-storage
spec:
  selector:
    app: minio
  ports:
    - port: 9090
      name: console
    - port: 9000
      name: s3
  type: ClusterIP